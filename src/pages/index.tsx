import Head from 'next/head';

import ArticlePlus from '../components/ArticlePlus';
import Footer from '../components/Footer';
import Hero from '../components/Hero';

import { GetStaticProps } from 'next'

import Link from 'next/link'
import styles from './home.module.scss'

import * as I from '../types/interfaceindex'

interface resultProps {
  posts: Array<I.ResponseMedium>
}


export default function Home({ posts }: resultProps) {
  return (
    <>
      <Head>
        <title> Blog | Exploit </title>
      </Head>
      <Hero />
      <main>
        <section className={styles.contentContainer}>
          {posts.map(post => (
            <div className={styles.card} key={post.guid}>
              <div className={styles.cardItem1}>
                <h1>{post.title}</h1>
                <div className={styles.authorDate}>
                  <p><img src="/image/user.png" alt="" />{post.author}</p>
                  <p><img src="/image/calendar.png" alt="" />{post.pubDate}</p>
                </div>
                <div className={styles.CategoriesSpan}>
                  <span>{post.categories.slice(0, 1)}</span>
                  <span>{post.categories.slice(1, 2)}</span>
                  <span>{post.categories.slice(3)}</span>
                </div>
                <Link
                  href={`/blog/${post.guid.split('/')[4]}`} prefetch>
                  <a>Abrir artigo</a>
                </Link>
              </div>
              <div className={styles.cardItem2}>
                <img src={`${post.thumbnail}`} alt="" />

              </div>
            </div>
          ))}
        </section>
      </main >
      <ArticlePlus />
      <Footer />
    </>
  )
}
export const getStaticProps: GetStaticProps = async () => {

  const result = await fetch(`https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fmedium.com%2Ffeed%2Fexploitcapital&api_key=${process.env.NEXT_MEDIUM}`)
    .then((response) => response.json())
  console.log(result)

  const posts = result.items.map(post => {
    return {
      guid: post.guid,
      title: post.title,
      subtitle: post.description,
      pubDate: new Date(post.pubDate).toLocaleDateString('pt-BR', { day: '2-digit', month: 'long', year: 'numeric' }),
      thumbnail: post.thumbnail,
      categories: post.categories,
      author: post.author,
    }
  })

  return {
    props: {
      posts
    },
    revalidate: 60 * 60 * 1 // 1 Horas
  }
}