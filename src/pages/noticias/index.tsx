import Head from 'next/head'
import Prismic from '@prismicio/client'
import { GetStaticProps } from 'next'
import { RichText } from 'prismic-dom'
import Link from 'next/link'

import { getPrismicCLient } from '../../services/prismic'

import styles from './styles.module.scss'

type Post = {
  slug: string;
  title: string;
  excerpt: string;
  updatedAt: string;
  image: {
    url: string;
  };
}

interface PostsProps {
  posts: Post[];
}

export default function Noticias({ posts }: PostsProps) {
  return (
    <>
      <Head>
        <title> Not√≠cias | Exploit </title>
      </Head>

      <main className={styles.container}>
        <div className={styles.news}>
          {posts.map((post) => (
            <Link href={`/noticias/${post.slug}`}>
              <a key={post.slug}>
                <img src={`${post.image.url}`} alt="" />
                <div>
                  <time>{post.updatedAt}</time>
                  <strong>{post.title}</strong>
                  <p>{post.excerpt}</p>
                </div>
              </a>
            </Link>
          ))}
        </div>
      </main>
    </>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const prismic = getPrismicCLient()

  const response = await prismic.query([
    Prismic.predicates.at('document.type', 'news')
  ], {
    fetch: ['news.title', 'news.content', 'news.image'],
    pageSize: 50,
  })

  console.log(JSON.stringify(response, null, 2))

  const posts = response.results.map(post => {
    return {
      slug: post.uid,
      title: RichText.asText(post.data.title),
      excerpt: post.data.content.find(content => content.type === 'paragraph')?.text ?? '',
      updatedAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {
        day: '2-digit',
        month: 'long',
        year: 'numeric'
      }),
      image: post.data.image,
    }
  })

  return {
    props: {
      posts
    },
  }
}