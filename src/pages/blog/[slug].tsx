import { GetStaticPaths, GetStaticProps } from "next"
import Head from 'next/head';

import { useEffect, useState } from "react";

import * as I from '../../types/interfaceindex'
import { regexYoutube } from "../../utils/regexYoutube";

import styles from './post.module.scss'

interface postProps {
  item: I.ResponseMedium
}

export default function Article({ item }: postProps) {
  const [post, setPost] = useState('')

  useEffect(() => {
    setPost(regexYoutube(item.content))
  }, [])
  console.log(item.content)

  return (
    <>
      <Head>
        <title> Blog | {item.title} </title>
      </Head>
      <section className={styles.article}>
        <h1>{item.title}</h1>
        <div className={styles.articleItem} dangerouslySetInnerHTML={{ __html: post }}>
        </div>
      </section>
    </>
  )
}

export const getStaticPaths: GetStaticPaths = async () => {
  return {
    paths: [],
    fallback: 'blocking',
  }
}

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const { slug } = params;

  let result: I.ResponseMedium[] = [];

  await fetch(`https://api.rss2json.com/v1/api.json?rss_url=https%3A%2F%2Fmedium.com%2Ffeed%2Fexploitcapital&api_key=${process.env.NEXT_MEDIUM}`)
    .then((response) => response.json())
    .then((data) => result = (data.items))


  const item = result.filter(item => item.guid === `https://medium.com/p/${slug}`)
  console.log(result)

  return {
    props: {
      item: item[0]
    },
    revalidate: 60 * 60 * 1 // 1 hours
  }
}
